package parser;
import java.io.File;
import java.util.ArrayList;
import java.util.Collections;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;


public class BaseParser {
	public File file;
	
	public BaseParser(String basePath){
		file = new File (basePath);
	}
	
	public void folderSearch(){
		File sub2[] = null;
		File subFiles[] = file.listFiles();
		File subFileVersions[] = null;
		
		ArrayList<File> files = new ArrayList<File>();
		
		for (int i = 0; i < subFiles.length; i++) {
			files.add(subFiles[i]);
		}	
		
		//Collections.shuffle(files);
	    
		ExecutorService b = Executors.newFixedThreadPool(1);
		
		if (subFiles != null){
			for (int i = 0; i < subFiles.length; i++){
				sub2 = files.get(i).listFiles();
				for (int j = 0; j < sub2.length; j++){
					if (sub2[j].isDirectory()){
						subFileVersions = sub2[j].listFiles();
						for (int k = 0; k < subFileVersions.length; k++) {
							if (subFileVersions[k].isDirectory()){
								Parser a = new Parser(subFileVersions[k]);
								b.execute(a);
							}
						}						
					}
				}
			}
		}
		
		
	/*	if (subFiles != null){
			for (int i = 0; i < subFiles.length; i++){
				sub2 = subFiles[i].listFiles();
				for (int j = 0; j < sub2.length; j++){
					if (sub2[j].isDirectory()){
						subFileVersions = sub2[j].listFiles();
						for (int k = 0; k < subFileVersions.length; k++) {
 						if (subFileVersions[k].isDirectory()){
								Parser a = new Parser(subFileVersions[k]);
								b.execute(a);
							}
						}						
					}
				}
			}
		}*/
		b.shutdown();
	}
	
	public static void main(String args[]){
		
		//BaseParser parser = new BaseParser("C:/Users/jbfan/Desktop/Dezembro");
		
		//BaseParser parser = new BaseParser("/home/weslley/ServidorEpona/projetoTeste");
		
		//teste
		//BaseParser parser = new BaseParser("/home/weslley/projeto");
		BaseParser parser = new BaseParser("/home/wst/groundhog/Projetos/grupo1/2");
		
		
		//BaseParser parser = new BaseParser("C:/Epona/ArtigoJANEIROtesteNOVO/teste");
		//BaseParser parser = new BaseParser("C:/Epona/Apache/ProjetosConfiguradosCorretamente/cassandra");
		
		System.out.println("comeÃ§o:");
		
		
		//BaseParser parser = new BaseParser("C:/Users/jbfan/Desktop/novosTomcat");	
		//BaseParser parser = new BaseParser("C:/Epona/Apache/Fonte");
		//BaseParser parser = new BaseParser("C:/Temp/Epona/temp");
		//PARA TESTES
		//BaseParser parser = new BaseParser("C:/TestePARSER");
		//BaseParser parser = new BaseParser("C:/novoTESTE");
		
		parser.folderSearch();	
	}
	
	private void search()
	{
		
	}
}
